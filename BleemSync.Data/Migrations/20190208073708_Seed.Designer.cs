// <auto-generated />
using System;
using BleemSync.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BleemSync.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20190208073708_Seed")]
    partial class Seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("BleemSync.Data.Entities.GameGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("GameManagerNodeId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("GameManagerNodeId");

                    b.ToTable("GameGenre");
                });

            modelBuilder.Entity("BleemSync.Data.Entities.GameManagerFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("NodeId");

                    b.Property<string>("Path");

                    b.HasKey("Id");

                    b.HasIndex("NodeId");

                    b.ToTable("GameManagerFiles");
                });

            modelBuilder.Entity("BleemSync.Data.Entities.GameManagerNode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Developer");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentId");

                    b.Property<int?>("Players");

                    b.Property<int>("Position");

                    b.Property<string>("Publisher");

                    b.Property<DateTime?>("ReleaseDate");

                    b.Property<string>("SortName");

                    b.Property<int?>("SystemId");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("SystemId");

                    b.ToTable("GameManagerNodes");
                });

            modelBuilder.Entity("BleemSync.Data.Entities.GameMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("GameId");

                    b.Property<string>("Key");

                    b.Property<string>("Type");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("GameMeta");
                });

            modelBuilder.Entity("BleemSync.Data.Entities.GameSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Name");

                    b.HasKey("Id");

                    b.ToTable("GameSystem");
                });

            modelBuilder.Entity("BleemSync.Data.Entities.GameGenre", b =>
                {
                    b.HasOne("BleemSync.Data.Entities.GameManagerNode")
                        .WithMany("Genres")
                        .HasForeignKey("GameManagerNodeId");
                });

            modelBuilder.Entity("BleemSync.Data.Entities.GameManagerFile", b =>
                {
                    b.HasOne("BleemSync.Data.Entities.GameManagerNode", "Node")
                        .WithMany("Files")
                        .HasForeignKey("NodeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BleemSync.Data.Entities.GameManagerNode", b =>
                {
                    b.HasOne("BleemSync.Data.Entities.GameManagerNode", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.HasOne("BleemSync.Data.Entities.GameSystem", "System")
                        .WithMany()
                        .HasForeignKey("SystemId");
                });

            modelBuilder.Entity("BleemSync.Data.Entities.GameMeta", b =>
                {
                    b.HasOne("BleemSync.Data.Entities.GameManagerNode", "Game")
                        .WithMany("Meta")
                        .HasForeignKey("GameId");
                });
#pragma warning restore 612, 618
        }
    }
}
